---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: create-build-signer-key-task
spec:
  inputs:
    params:
    - name: task-pvc
      description: pipeline pvc name place holder
    - name: registry-namespace
      description: The namespace in the container image registry. You can set it up
        with {bx cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.
    - name: registry-region
      description: The IBM Cloud region for image registry
    - name: api-key
      description: The IBM Cloud API key is used to access the IBM Cloud Kubernetes
        Service API and interact with the cluster. You can obtain your API key with
        'bx iam api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys
        by clicking **Create API key** (Each API key only can be viewed once).
    - name: prod-resource-group
      description: The IBM Cloud resource group for production deployment
    - name: vault_name
      description: Specify a Key Protect instance name.  If an instance has already
        been created, the existing one will be used, otherwise a new one will be created.
        You can specify signer names in the build and validation fields below or use
        the default values.
    - name: validation_signer
      description: VALIDATION_SIGNER
    - name: build_signer
      description: BUILD_SIGNER
    - name: repository
      description: The git repo
    - name: prod-region
      description: The IBM Cloud region for production deployment
    - name: app-name
      description: '#/messages/deploy.appDescription'
    - name: revision
      description: the branch for the git repo
  steps:
  - name: clone-step
    image: alpine/git
    env:
    - name: REPOSITORY
      value: $(inputs.params.repository)
    - name: REVISION
      value: $(inputs.params.revision)
    command: ["/bin/sh", "-c"]
    args:
    - set -e -o pipefail;
      echo "Cloning $REPOSITORY run 75";
      git clone -q -b $REVISION $REPOSITORY .;
  - name: create-build-signer-key
    image: ibmcom/pipeline-base-image:latest
    env:
    - name: VAULT_INSTANCE
      value: $(inputs.params.vault_name)
    - name: VALIDATION_SIGNER
      value: $(inputs.params.validation_signer)
    - name: API_KEY
      value: $(inputs.params.api-key)
    - name: BUILD_REGION_ID
      value: $(inputs.params.prod-region)
    - name: BUILD_RESOURCE_GROUP
      value: $(inputs.params.prod-resource-group)
    - name: APP_NAME
      value: $(inputs.params.app-name)
    - name: REGISTRY_NAMESPACE
      value: $(inputs.params.registry-namespace)
    - name: BUILD_SIGNER
      value: $(inputs.params.build_signer)
    command: ["/bin/bash", "-c"]
    args:
    - |
      #!/bin/bash
      echo "PASSED"
      echo "test"
      echo "something"
    volumeMounts:
    - mountPath: /artifacts
      name: task-volume
  volumes:
  - name: task-volume
    persistentVolumeClaim:
      claimName: $(inputs.params.task-pvc)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: create-validation-signer-key-task
spec:
  inputs:
    params:
    - name: task-pvc
      description: pipeline pvc name place holder
    - name: registry-namespace
      description: The namespace in the container image registry. You can set it up
        with {bx cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.
    - name: registry-region
      description: The IBM Cloud region for image registry
    - name: api-key
      description: The IBM Cloud API key is used to access the IBM Cloud Kubernetes
        Service API and interact with the cluster. You can obtain your API key with
        'bx iam api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys
        by clicking **Create API key** (Each API key only can be viewed once).
    - name: prod-resource-group
      description: The IBM Cloud resource group for production deployment
    - name: vault_name
      description: Specify a Key Protect instance name.  If an instance has already
        been created, the existing one will be used, otherwise a new one will be created.
        You can specify signer names in the build and validation fields below or use
        the default values.
    - name: validation_signer
      description: VALIDATION_SIGNER
    - name: build_signer
      description: BUILD_SIGNER
    - name: repository
      description: The git repo
    - name: prod-region
      description: The IBM Cloud region for production deployment
    - name: app-name
      description: '#/messages/deploy.appDescription'
    - name: revision
      description: the branch for the git repo
  steps:
  - name: clone-step
    image: alpine/git
    env:
    - name: REPOSITORY
      value: $(inputs.params.repository)
    - name: REVISION
      value: $(inputs.params.revision)
    command: ["/bin/sh", "-c"]
    args:
    - set -e -o pipefail;
      echo "Cloning $REPOSITORY run 75";
      git clone -q -b $REVISION $REPOSITORY .;
  - name: create-validation-signer-key
    image: ibmcom/pipeline-base-image:latest
    env:
    - name: VAULT_INSTANCE
      value: $(inputs.params.vault_name)
    - name: VALIDATION_SIGNER
      value: $(inputs.params.validation_signer)
    - name: API_KEY
      value: $(inputs.params.api-key)
    - name: BUILD_REGION_ID
      value: $(inputs.params.prod-region)
    - name: BUILD_RESOURCE_GROUP
      value: $(inputs.params.prod-resource-group)
    - name: APP_NAME
      value: $(inputs.params.app-name)
    - name: REGISTRY_NAMESPACE
      value: $(inputs.params.registry-namespace)
    - name: BUILD_SIGNER
      value: $(inputs.params.build_signer)
    command: ["/bin/bash", "-c"]
    args:
    - |
      #!/bin/bash
      echo "PASSED"
      echo "test"
      echo "something"
    volumeMounts:
    - mountPath: /artifacts
      name: task-volume
  volumes:
  - name: task-volume
    persistentVolumeClaim:
      claimName: $(inputs.params.task-pvc)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: delete-build-signer-key-task
spec:
  inputs:
    params:
    - name: task-pvc
      description: pipeline pvc name place holder
    - name: registry-namespace
      description: The namespace in the container image registry. You can set it up
        with {bx cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.
    - name: registry-region
      description: The IBM Cloud region for image registry
    - name: api-key
      description: The IBM Cloud API key is used to access the IBM Cloud Kubernetes
        Service API and interact with the cluster. You can obtain your API key with
        'bx iam api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys
        by clicking **Create API key** (Each API key only can be viewed once).
    - name: prod-resource-group
      description: The IBM Cloud resource group for production deployment
    - name: vault_name
      description: Specify a Key Protect instance name.  If an instance has already
        been created, the existing one will be used, otherwise a new one will be created.
        You can specify signer names in the build and validation fields below or use
        the default values.
    - name: validation_signer
      description: VALIDATION_SIGNER
    - name: build_signer
      description: BUILD_SIGNER
    - name: repository
      description: The git repo
    - name: prod-region
      description: The IBM Cloud region for production deployment
    - name: app-name
      description: '#/messages/deploy.appDescription'
    - name: revision
      description: the branch for the git repo
  steps:
  - name: clone-step
    image: alpine/git
    env:
    - name: REPOSITORY
      value: $(inputs.params.repository)
    - name: REVISION
      value: $(inputs.params.revision)
    command: ["/bin/sh", "-c"]
    args:
    - set -e -o pipefail;
      echo "Cloning $REPOSITORY run 75";
      git clone -q -b $REVISION $REPOSITORY .;
  - name: delete-build-signer-key
    image: ibmcom/pipeline-base-image:latest
    env:
    - name: VAULT_INSTANCE
      value: $(inputs.params.vault_name)
    - name: VALIDATION_SIGNER
      value: $(inputs.params.validation_signer)
    - name: API_KEY
      value: $(inputs.params.api-key)
    - name: BUILD_REGION_ID
      value: $(inputs.params.prod-region)
    - name: BUILD_RESOURCE_GROUP
      value: $(inputs.params.prod-resource-group)
    - name: APP_NAME
      value: $(inputs.params.app-name)
    - name: REGISTRY_NAMESPACE
      value: $(inputs.params.registry-namespace)
    - name: BUILD_SIGNER
      value: $(inputs.params.build_signer)
    command: ["/bin/bash", "-c"]
    args:
    - |
      #!/bin/bash
      echo "PASSED"
      echo "test"
      echo "something"
    volumeMounts:
    - mountPath: /artifacts
      name: task-volume
  volumes:
  - name: task-volume
    persistentVolumeClaim:
      claimName: $(inputs.params.task-pvc)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: delete-validation-signer-key-task
spec:
  inputs:
    params:
    - name: task-pvc
      description: pipeline pvc name place holder
    - name: registry-namespace
      description: The namespace in the container image registry. You can set it up
        with {bx cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.
    - name: registry-region
      description: The IBM Cloud region for image registry
    - name: api-key
      description: The IBM Cloud API key is used to access the IBM Cloud Kubernetes
        Service API and interact with the cluster. You can obtain your API key with
        'bx iam api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys
        by clicking **Create API key** (Each API key only can be viewed once).
    - name: prod-resource-group
      description: The IBM Cloud resource group for production deployment
    - name: vault_name
      description: Specify a Key Protect instance name.  If an instance has already
        been created, the existing one will be used, otherwise a new one will be created.
        You can specify signer names in the build and validation fields below or use
        the default values.
    - name: validation_signer
      description: VALIDATION_SIGNER
    - name: build_signer
      description: BUILD_SIGNER
    - name: repository
      description: The git repo
    - name: prod-region
      description: The IBM Cloud region for production deployment
    - name: app-name
      description: '#/messages/deploy.appDescription'
    - name: revision
      description: the branch for the git repo
  steps:
  - name: clone-step
    image: alpine/git
    env:
    - name: REPOSITORY
      value: $(inputs.params.repository)
    - name: REVISION
      value: $(inputs.params.revision)
    command: ["/bin/sh", "-c"]
    args:
    - set -e -o pipefail;
      echo "Cloning $REPOSITORY run 75";
      git clone -q -b $REVISION $REPOSITORY .;
  - name: delete-validation-signer-key
    image: ibmcom/pipeline-base-image:latest
    env:
    - name: VAULT_INSTANCE
      value: $(inputs.params.vault_name)
    - name: VALIDATION_SIGNER
      value: $(inputs.params.validation_signer)
    - name: API_KEY
      value: $(inputs.params.api-key)
    - name: BUILD_REGION_ID
      value: $(inputs.params.prod-region)
    - name: BUILD_RESOURCE_GROUP
      value: $(inputs.params.prod-resource-group)
    - name: APP_NAME
      value: $(inputs.params.app-name)
    - name: REGISTRY_NAMESPACE
      value: $(inputs.params.registry-namespace)
    - name: BUILD_SIGNER
      value: $(inputs.params.build_signer)
    command: ["/bin/bash", "-c"]
    args:
    - |
      #!/bin/bash
      echo "PASSED"
      echo "test"
      echo "something"
    volumeMounts:
    - mountPath: /artifacts
      name: task-volume
  volumes:
  - name: task-volume
    persistentVolumeClaim:
      claimName: $(inputs.params.task-pvc)
