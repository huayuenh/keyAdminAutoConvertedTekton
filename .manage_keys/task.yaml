---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: create build signer key-task
spec:
  params:
  - name: registry-namespace
    value: The namespace in the container image registry. You can set it up with {bx
      cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.
  - name: registry-region
    value: The IBM Cloud region for image registry
  - name: api-key
    value: The IBM Cloud API key is used to access the IBM Cloud Kubernetes Service
      API and interact with the cluster. You can obtain your API key with 'bx iam
      api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys by
      clicking **Create API key** (Each API key only can be viewed once).
  - name: prod-resource-group
    value: The IBM Cloud resource group for production deployment
  - name: vault_name
    value: Specify a Key Protect instance name.  If an instance has already been created,
      the existing one will be used, otherwise a new one will be created. You can
      specify signer names in the build and validation fields below or use the default
      values.
  - name: repository
    value: The git repo
  - name: prod-region
    value: The IBM Cloud region for production deployment
  - name: app-name
    value: '#/messages/deploy.appDescription'
  - name: revision
    value: the branch for the gir repo
  steps:
  - name: clone-step
    image: alpine/git
    command: '["/bin/sh", "-c"]'
    args:
    - "set -e -o pipefail; \r echo \"Cloning $REPOSITORY\";\r git clone -q -b $REVISION\
      \ $REPOSITORY .;"
    env:
    - name: REPOSITORY
      value: $(inputs.params.repository)
    - name: REVISION
      value: $(inputs.params.revision)
  - name: Create Build Signer Key
    image: ibmcom/pipeline-base-image:latest
    command: '["/bin/sh+","-c"]'
    args:
    - "#!/bin/bash\nsource <(curl -sSL \"https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/add_docker.sh\"\
      )\n# Restore root & repository keys\nif [ -z \"$VAULT_INSTANCE\" ]; then\n \
      \ echo \"No op\"\nelse\n  export IBMCLOUD_API_KEY=$IBM_CLOUD_API_KEY\n  export\
      \ IBMCLOUD_TARGET_REGION=${IBMCLOUD_TARGET_REGION:-\"eu-gb\"}\n\n  # if target\
      \ region is in the 'ibm:yp:<region>' just keep the region part\n  REGION_SUBSET=$(echo\
      \ \"$IBMCLOUD_TARGET_REGION\" | awk -F ':' '{print $3;}')\n  if [[ -z \"$REGION_SUBSET\"\
      \ ]]; then\n    echo \"IBM Cloud Target Region is $IBMCLOUD_TARGET_REGION\"\n\
      \  else\n    export IBMCLOUD_TARGET_REGION=$REGION_SUBSET\n    echo \"IBM Cloud\
      \ Target Region is $IBMCLOUD_TARGET_REGION. export IBMCLOUD_TARGET_REGION=$REGION_SUBSET\
      \ done\"\n  fi\n\n  ibmcloud login --apikey \"$IBM_CLOUD_API_KEY\" -r \"$IBMCLOUD_TARGET_REGION\"\
      \n  \n  DEVOPS_SIGNER=\"$DEVOPS_BUILD_SIGNER\"\n  source <(curl -sSL \"https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/signing_utils.sh\"\
      )\n  source <(curl -sSL \"https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/create_signer.sh\"\
      )\nfi\n"
    env:
    - name: VAULT_INSTANCE
      value: $(inputs.params.vault_name)
    - name: REVISION
      value: $(inputs.params.master)
    - name: VALIDATION_SIGNER
      value: $(inputs.params.validation_signer)
    - name: API_KEY
      value: $(inputs.params.api-key)
    - name: BUILD_REGION_ID
      value: $(inputs.params.prod-region)
    - name: BUILD_RESOURCE_GROUP
      value: $(inputs.params.prod-resource-group)
    - name: APP_NAME
      value: $(inputs.params.app-name)
    - name: REPOSITORY
      value: $(inputs.params.com/huayuenh/keyAdminAutoConvertedTekton)
    - name: REGISTRY_NAMESPACE
      value: $(inputs.params.registry-namespace)
    - name: BUILD_SIGNER
      value: $(inputs.params.build_signer)
    - name: GIT_REPO
      value: $(inputs.params.repo)
    volumeMounts:
    - monthPath: /artifacts
      name: task-volume
  volumes:
  - name: task-volume
    persistentVolumeClaim:
      name: $(inputs.params.task-pvc)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: create validation signer key-task
spec:
  params:
  - name: registry-namespace
    value: The namespace in the container image registry. You can set it up with {bx
      cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.
  - name: registry-region
    value: The IBM Cloud region for image registry
  - name: api-key
    value: The IBM Cloud API key is used to access the IBM Cloud Kubernetes Service
      API and interact with the cluster. You can obtain your API key with 'bx iam
      api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys by
      clicking **Create API key** (Each API key only can be viewed once).
  - name: prod-resource-group
    value: The IBM Cloud resource group for production deployment
  - name: vault_name
    value: Specify a Key Protect instance name.  If an instance has already been created,
      the existing one will be used, otherwise a new one will be created. You can
      specify signer names in the build and validation fields below or use the default
      values.
  - name: repository
    value: The git repo
  - name: prod-region
    value: The IBM Cloud region for production deployment
  - name: app-name
    value: '#/messages/deploy.appDescription'
  - name: revision
    value: the branch for the gir repo
  steps:
  - name: clone-step
    image: alpine/git
    command: '["/bin/sh", "-c"]'
    args:
    - "set -e -o pipefail; \r echo \"Cloning $REPOSITORY\";\r git clone -q -b $REVISION\
      \ $REPOSITORY .;"
    env:
    - name: REPOSITORY
      value: $(inputs.params.repository)
    - name: REVISION
      value: $(inputs.params.revision)
  - name: Create Validation Signer Key
    image: ibmcom/pipeline-base-image:latest
    command: '["/bin/sh+","-c"]'
    args:
    - |
      #!/bin/bash
      source <(curl -sSL "https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/add_docker.sh")
      # Restore  keys
      if [ -z "$VAULT_INSTANCE" ]; then
        echo "No op"
      else
        export IBMCLOUD_API_KEY=$IBM_CLOUD_API_KEY
        export IBMCLOUD_TARGET_REGION=${IBMCLOUD_TARGET_REGION:-"eu-gb"}

        # if target region is in the 'ibm:yp:<region>' just keep the region part
        REGION_SUBSET=$(echo "$IBMCLOUD_TARGET_REGION" | awk -F ':' '{print $3;}')
        if [[ -z "$REGION_SUBSET" ]]; then
          echo "IBM Cloud Target Region is $IBMCLOUD_TARGET_REGION"
        else
          export IBMCLOUD_TARGET_REGION=$REGION_SUBSET
          echo "IBM Cloud Target Region is $IBMCLOUD_TARGET_REGION. export IBMCLOUD_TARGET_REGION=$REGION_SUBSET done"
        fi

        ibmcloud login --apikey "$IBM_CLOUD_API_KEY" -r "$IBMCLOUD_TARGET_REGION"

        DEVOPS_SIGNER="$DEVOPS_VALIDATION_SIGNER"
        source <(curl -sSL "https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/signing_utils.sh")
        source <(curl -sSL "https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/create_signer.sh")
      fi
    env:
    - name: VAULT_INSTANCE
      value: $(inputs.params.vault_name)
    - name: REVISION
      value: $(inputs.params.master)
    - name: VALIDATION_SIGNER
      value: $(inputs.params.validation_signer)
    - name: API_KEY
      value: $(inputs.params.api-key)
    - name: BUILD_REGION_ID
      value: $(inputs.params.prod-region)
    - name: BUILD_RESOURCE_GROUP
      value: $(inputs.params.prod-resource-group)
    - name: APP_NAME
      value: $(inputs.params.app-name)
    - name: REPOSITORY
      value: $(inputs.params.com/huayuenh/keyAdminAutoConvertedTekton)
    - name: REGISTRY_NAMESPACE
      value: $(inputs.params.registry-namespace)
    - name: BUILD_SIGNER
      value: $(inputs.params.build_signer)
    - name: GIT_REPO
      value: $(inputs.params.repo)
    volumeMounts:
    - monthPath: /artifacts
      name: task-volume
  volumes:
  - name: task-volume
    persistentVolumeClaim:
      name: $(inputs.params.task-pvc)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: delete build signer key-task
spec:
  params:
  - name: registry-namespace
    value: The namespace in the container image registry. You can set it up with {bx
      cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.
  - name: registry-region
    value: The IBM Cloud region for image registry
  - name: api-key
    value: The IBM Cloud API key is used to access the IBM Cloud Kubernetes Service
      API and interact with the cluster. You can obtain your API key with 'bx iam
      api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys by
      clicking **Create API key** (Each API key only can be viewed once).
  - name: prod-resource-group
    value: The IBM Cloud resource group for production deployment
  - name: vault_name
    value: Specify a Key Protect instance name.  If an instance has already been created,
      the existing one will be used, otherwise a new one will be created. You can
      specify signer names in the build and validation fields below or use the default
      values.
  - name: repository
    value: The git repo
  - name: prod-region
    value: The IBM Cloud region for production deployment
  - name: app-name
    value: '#/messages/deploy.appDescription'
  - name: revision
    value: the branch for the gir repo
  steps:
  - name: clone-step
    image: alpine/git
    command: '["/bin/sh", "-c"]'
    args:
    - "set -e -o pipefail; \r echo \"Cloning $REPOSITORY\";\r git clone -q -b $REVISION\
      \ $REPOSITORY .;"
    env:
    - name: REPOSITORY
      value: $(inputs.params.repository)
    - name: REVISION
      value: $(inputs.params.revision)
  - name: Delete Build Signer Key
    command: '["/bin/sh+","-c"]'
    args:
    - "#!/bin/bash\n\n# Restore root & repository keys\nif [ -z \"$VAULT_INSTANCE\"\
      \ ]; then\n  echo \"No op\"\nelse\n  export IBMCLOUD_API_KEY=$IBM_CLOUD_API_KEY\n\
      \  export IBMCLOUD_TARGET_REGION=${IBMCLOUD_TARGET_REGION:-\"eu-gb\"}\n\n  #\
      \ if target region is in the 'ibm:yp:<region>' just keep the region part\n \
      \ REGION_SUBSET=$(echo \"$IBMCLOUD_TARGET_REGION\" | awk -F ':' '{print $3;}')\n\
      \  if [[ -z \"$REGION_SUBSET\" ]]; then\n    echo \"IBM Cloud Target Region\
      \ is $IBMCLOUD_TARGET_REGION\"\n  else\n    export IBMCLOUD_TARGET_REGION=$REGION_SUBSET\n\
      \    echo \"IBM Cloud Target Region is $IBMCLOUD_TARGET_REGION. export IBMCLOUD_TARGET_REGION=$REGION_SUBSET\
      \ done\"\n  fi\n\n  ibmcloud login --apikey \"$IBM_CLOUD_API_KEY\" -r \"$IBMCLOUD_TARGET_REGION\"\
      \n  \n  DEVOPS_SIGNER=\"$DEVOPS_BUILD_SIGNER\"\n  source <(curl -sSL \"https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/signing_utils.sh\"\
      )\n  source <(curl -sSL \"https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/delete_signer_key.sh\"\
      )\nfi\n"
    env:
    - name: VAULT_INSTANCE
      value: $(inputs.params.vault_name)
    - name: REVISION
      value: $(inputs.params.master)
    - name: VALIDATION_SIGNER
      value: $(inputs.params.validation_signer)
    - name: API_KEY
      value: $(inputs.params.api-key)
    - name: BUILD_REGION_ID
      value: $(inputs.params.prod-region)
    - name: BUILD_RESOURCE_GROUP
      value: $(inputs.params.prod-resource-group)
    - name: APP_NAME
      value: $(inputs.params.app-name)
    - name: REPOSITORY
      value: $(inputs.params.com/huayuenh/keyAdminAutoConvertedTekton)
    - name: REGISTRY_NAMESPACE
      value: $(inputs.params.registry-namespace)
    - name: BUILD_SIGNER
      value: $(inputs.params.build_signer)
    - name: GIT_REPO
      value: $(inputs.params.repo)
    volumeMounts:
    - monthPath: /artifacts
      name: task-volume
  volumes:
  - name: task-volume
    persistentVolumeClaim:
      name: $(inputs.params.task-pvc)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: delete validation signer key-task
spec:
  params:
  - name: registry-namespace
    value: The namespace in the container image registry. You can set it up with {bx
      cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.
  - name: registry-region
    value: The IBM Cloud region for image registry
  - name: api-key
    value: The IBM Cloud API key is used to access the IBM Cloud Kubernetes Service
      API and interact with the cluster. You can obtain your API key with 'bx iam
      api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys by
      clicking **Create API key** (Each API key only can be viewed once).
  - name: prod-resource-group
    value: The IBM Cloud resource group for production deployment
  - name: vault_name
    value: Specify a Key Protect instance name.  If an instance has already been created,
      the existing one will be used, otherwise a new one will be created. You can
      specify signer names in the build and validation fields below or use the default
      values.
  - name: repository
    value: The git repo
  - name: prod-region
    value: The IBM Cloud region for production deployment
  - name: app-name
    value: '#/messages/deploy.appDescription'
  - name: revision
    value: the branch for the gir repo
  steps:
  - name: clone-step
    image: alpine/git
    command: '["/bin/sh", "-c"]'
    args:
    - "set -e -o pipefail; \r echo \"Cloning $REPOSITORY\";\r git clone -q -b $REVISION\
      \ $REPOSITORY .;"
    env:
    - name: REPOSITORY
      value: $(inputs.params.repository)
    - name: REVISION
      value: $(inputs.params.revision)
  - name: Delete Validation Signer Key
    command: '["/bin/sh+","-c"]'
    args:
    - |
      #!/bin/bash

      # Restore  keys
      if [ -z "$VAULT_INSTANCE" ]; then
        echo "No op"
      else
        export IBMCLOUD_API_KEY=$IBM_CLOUD_API_KEY
        export IBMCLOUD_TARGET_REGION=${IBMCLOUD_TARGET_REGION:-"eu-gb"}

        # if target region is in the 'ibm:yp:<region>' just keep the region part
        REGION_SUBSET=$(echo "$IBMCLOUD_TARGET_REGION" | awk -F ':' '{print $3;}')
        if [[ -z "$REGION_SUBSET" ]]; then
          echo "IBM Cloud Target Region is $IBMCLOUD_TARGET_REGION"
        else
          export IBMCLOUD_TARGET_REGION=$REGION_SUBSET
          echo "IBM Cloud Target Region is $IBMCLOUD_TARGET_REGION. export IBMCLOUD_TARGET_REGION=$REGION_SUBSET done"
        fi

        ibmcloud login --apikey "$IBM_CLOUD_API_KEY" -r "$IBMCLOUD_TARGET_REGION"

        DEVOPS_SIGNER="$DEVOPS_VALIDATION_SIGNER"
        source <(curl -sSL "https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/signing_utils.sh")
        source <(curl -sSL "https://raw.githubusercontent.com/open-toolchain/commons/master/scripts/image_signing/delete_signer_key.sh")
      fi
    env:
    - name: VAULT_INSTANCE
      value: $(inputs.params.vault_name)
    - name: REVISION
      value: $(inputs.params.master)
    - name: VALIDATION_SIGNER
      value: $(inputs.params.validation_signer)
    - name: API_KEY
      value: $(inputs.params.api-key)
    - name: BUILD_REGION_ID
      value: $(inputs.params.prod-region)
    - name: BUILD_RESOURCE_GROUP
      value: $(inputs.params.prod-resource-group)
    - name: APP_NAME
      value: $(inputs.params.app-name)
    - name: REPOSITORY
      value: $(inputs.params.com/huayuenh/keyAdminAutoConvertedTekton)
    - name: REGISTRY_NAMESPACE
      value: $(inputs.params.registry-namespace)
    - name: BUILD_SIGNER
      value: $(inputs.params.build_signer)
    - name: GIT_REPO
      value: $(inputs.params.repo)
    volumeMounts:
    - monthPath: /artifacts
      name: task-volume
  volumes:
  - name: task-volume
    persistentVolumeClaim:
      name: $(inputs.params.task-pvc)
